{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // state =[] -> In reducers the state always needs to be equal to something. The posts are going to be an array so we are going to equal the state to an empty array.\n  // a reduce is a function or more specifically it is equal to a function that accepts the state and also it accepts the action. Then based on the action type, if it is equal to CREATE we want to return something like either the action or the state changed by the action. Usually will have a lot of if statements for loads of different things so better to use a SWITCH statement. \n  // if(action.type === 'CREATE') {\n  //     return action;\n  // }\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return state;\n\n    case 'CREATE':\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Darania/Desktop/Memories Project/client/src/reducers/posts.js"],"names":["reducer","state","action","type"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC;AACA;AACA;AACA;AACA;AAEA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAOF,KAAP;;AACJ,SAAK,QAAL;AACI,aAAOA,KAAP;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH,CAfD","sourcesContent":["const reducer = (state = [], action) => {\n    // state =[] -> In reducers the state always needs to be equal to something. The posts are going to be an array so we are going to equal the state to an empty array.\n    // a reduce is a function or more specifically it is equal to a function that accepts the state and also it accepts the action. Then based on the action type, if it is equal to CREATE we want to return something like either the action or the state changed by the action. Usually will have a lot of if statements for loads of different things so better to use a SWITCH statement. \n    // if(action.type === 'CREATE') {\n    //     return action;\n    // }\n\n    switch (action.type) {\n        case 'FETCH_ALL':\n            return state; \n        case 'CREATE':\n            return state; \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}